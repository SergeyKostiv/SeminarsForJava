import java.time.LocalTime;
import java.util.Arrays;
import java.util.Map;
import java.util.Scanner;
public class Sem1 {
    public static void main(String[] args) {
        System.out.println(task4(2,-2));

    }

     static void task0(){
           /*<aside>
üìî **–¢–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏:**
–í –∫–æ–Ω—Å–æ–ª–∏ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏, –≤—ã–≤–µ—Å—Ç–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –≤–∏–¥–∞

"–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, <–ò–º—è>!", –µ—Å–ª–∏ –≤—Ä–µ–º—è –æ—Ç 05:00 –¥–æ 11:59

"–î–æ–±—Ä—ã–π –¥–µ–Ω—å, <–ò–º—è>!", –µ—Å–ª–∏ –≤—Ä–µ–º—è –æ—Ç 12:00 –¥–æ 17:59;

"–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä, <–ò–º—è>!", –µ—Å–ª–∏ –≤—Ä–µ–º—è –æ—Ç 18:00 –¥–æ 22:59;

"–î–æ–±—Ä–æ–π –Ω–æ—á–∏, <–ò–º—è>!", –µ—Å–ª–∏ –≤—Ä–µ–º—è –æ—Ç 23:00 –¥–æ 4:59

</aside>*/
         System.out.println("–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –∏–º—è: ");
         Scanner scanner = new Scanner(System.in);
         String name = scanner.nextLine();
         LocalTime time = LocalTime.now();
         int hour = time.getHour();
         if(hour >= 5 && hour < 12) System.out.println("–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ, " + name);
         else if (hour >= 12 && hour < 18) {
             System.out.println("–î–æ–±—Ä—ã–π –¥–µ–Ω—å, " + name);
         } else if (hour < 23) {
             System.out.println("–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä, " + name);
         } else {
             System.out.println("–î–æ–±—Ä–æ–π –Ω–æ—á–∏, " + name);
         }
         scanner.close();
     }

    static void task1(){
        /*–¢–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏:
–î–∞–Ω –º–∞—Å—Å–∏–≤ –¥–≤–æ–∏—á–Ω—ã—Ö —á–∏—Å–µ–ª, –Ω–∞–ø—Ä–∏–º–µ—Ä [1,1,0,1,1,1], –≤—ã–≤–µ—Å—Ç–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥—Ä—è–¥ –∏–¥—É—â–∏—Ö 1.*/
         int[] arr = {1,1,1,0,1,0};
         int temp = 0;
         int maxOnes = 0;
         for (int i = 0; i < arr.length; i++) {
             if(arr[i] == 1) temp++;
             else if(arr[i] == 0){
                 if(temp>maxOnes){
                     maxOnes = temp;
                 }
                 temp = 0;
             }
         }
         if(temp > maxOnes)
             maxOnes = temp;
         System.out.println(maxOnes);
     }

    static void task2(){
        /*–¢–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏:
–î–∞–Ω –º–∞—Å—Å–∏–≤ nums = [3,2,2,3] –∏ —á–∏—Å–ª–æ val = 3.
–ï—Å–ª–∏ –≤ –º–∞—Å—Å–∏–≤–µ –µ—Å—Ç—å —á–∏—Å–ª–∞, —Ä–∞–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–Ω–æ–º—É, –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ —ç—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –∫–æ–Ω–µ—Ü –º–∞—Å—Å–∏–≤–∞.
–¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ (–∏–ª–∏ –≤—Å–µ) —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ—Ç–ª–∏—á–Ω—ã –æ—Ç –∑–∞–¥–∞–Ω–Ω–æ–≥–æ, –∞ –æ—Å—Ç–∞–ª—å–Ω—ã–µ - —Ä–∞–≤–Ω—ã –µ–º—É.*/
        int[] arr = {3,2,2,3,1,2,44,9,9,2,5,6,9,9};
        int val = 9;
        int[] tempArr = new int[arr.length];
        Arrays.fill(tempArr, val);
        int current = 0;
        for (int i = 0; i < arr.length; i++) {
            if(arr[i] != val){
                tempArr[current++] = arr[i];
            }
        }
        System.out.println(Arrays.toString(tempArr));
    }

        static String task3(String str){
//         /*–¢–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏:
// –í–æ —Ñ—Ä–∞–∑–µ "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –∫—É—Ä—Å –ø–æ Java" –ø–µ—Ä–µ—Å—Ç–∞–≤–∏—Ç—å —Å–ª–æ–≤–∞ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.*/
         str = str.toLowerCase();
         String[] strArr = str.split(" ");
         StringBuilder stringBuilder = new StringBuilder();
         for (int i = 0; i < strArr.length; i++) {
             stringBuilder.append(strArr[strArr.length - 1 - i ]).append(" ");
         }
         return stringBuilder.toString();
     }
    // <aside>
// üìî **–¢–µ–∫—Å—Ç –∑–∞–¥–∞—á–∏:**

// –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –≤–æ–∑–≤–µ–¥–µ–Ω–∏—è —á–∏—Å–ª–∞ –∞ –≤ —Å—Ç–µ–ø–µ–Ω—å b. a, b –∏–∑ Z. –°–≤–æ–¥—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω—è–µ–º—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –∫ –º–∏–Ω–∏–º—É–º—É.

// –ü—Ä–∏–º–µ—Ä 1: –∞ = 3, b = 2, –æ—Ç–≤–µ—Ç: 9

// –ü—Ä–∏–º–µ—Ä 2: –∞ = 2, b = -2, –æ—Ç–≤–µ—Ç: 0.25

// –ü—Ä–∏–º–µ—Ä 3: –∞ = 3, b = 0, –æ—Ç–≤–µ—Ç: 1

// </aside>

    static double task4(double a, double b){
        double result = 1;
        if(a==1 || b==0) return 1;
        for (int i = 0; i < Math.abs(b); i++) {
            result = result * a;
        }
        return b > 0 ? result : 1/result;
    }

}
